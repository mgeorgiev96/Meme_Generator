{"version":3,"sources":["Context.js","Input.js","Canvas.js","Meme.js","Header.js","App.js","index.js"],"names":["ImageContext","createContext","ContextProvider","props","useState","image","setImage","color","setColor","fontSize","setFontSize","topTop","setTop","leftTop","setLeft","leftBottom","setLeftB","topBottom","setTopB","colorBot","setColorBot","fontBot","setFontBot","Provider","value","children","Input","useContext","className","type","onChange","e","canvas","document","querySelector","target","ctx","getContext","width","scrollWidth","height","scrollHeight","i","URL","createObjectURL","files","img","Image","src","onload","drawImage","onClick","preventDefault","container","link","toDataURL","a","createElement","download","href","appendChild","click","removeChild","window","location","reload","Canvas","textBottom","top","left","textUpper","style","backgroundColor","Meme","innerHTML","text_bottom","text_top","fillStyle","font","fillText","parseInt","max","Header","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"mKAIaA,EAAeC,0BAGfC,EAAkB,SAACC,GAAS,IAAD,EACXC,mBAAS,IADE,mBAC7BC,EAD6B,KACvBC,EADuB,OAEXF,mBAAS,WAFE,mBAE7BG,EAF6B,KAEvBC,EAFuB,OAGLJ,mBAAS,QAHJ,mBAG7BK,EAH6B,KAGpBC,EAHoB,OAIZN,mBAAS,QAJG,mBAI7BO,EAJ6B,KAItBC,EAJsB,OAKVR,mBAAS,QALC,mBAK7BS,EAL6B,KAKrBC,EALqB,OAMNV,mBAAS,QANH,mBAM7BW,EAN6B,KAMlBC,EANkB,OAORZ,mBAAS,SAPD,mBAO7Ba,EAP6B,KAOnBC,EAPmB,OAQLd,mBAAS,WARJ,mBAQ7Be,EAR6B,KAQpBC,EARoB,OASPhB,mBAAS,QATF,mBAS7BiB,EAT6B,KASrBC,EATqB,KAYpC,OACI,kBAACtB,EAAauB,SAAd,CAAuBC,MACtB,CAACnB,EAAMC,EAASC,EAAMC,EAASC,EAASC,EAAYC,EAAOC,EAAOC,EAAQC,EAAQC,EAAWC,EAASC,EACvGC,EAAQC,EAASC,EAAYC,EAAQC,IAChCnB,EAAMsB,WCmBJC,MAvCf,WAAkB,IAAD,EACYC,qBAAW3B,GADvB,mBACAM,GADA,WA8Bb,OACI,8BACI,2BAAOsB,UAAU,iBAAiBC,KAAK,OAAOC,SA9BlC,SAACC,GACjB,IAAIC,EAASC,SAASC,cAAc,UAChCC,EAASJ,EAAEI,OACXC,EAAMJ,EAAOK,WAAW,MAC5BL,EAAOM,MAAQN,EAAOO,YACtBP,EAAOQ,OAASR,EAAOS,aACvB,IAAIC,EAAIC,IAAIC,gBAAgBT,EAAOU,MAAM,IACzCvC,EAASoC,GACT,IAAII,EAAM,IAAIC,MACdD,EAAIE,IAAMN,EACVI,EAAIG,OAAS,WACTb,EAAIc,UAAUJ,EAAI,EAAE,EAAEd,EAAOM,MAAMN,EAAOQ,YAoB1C,4BAAQW,QAhBC,SAACpB,GACdA,EAAEqB,iBACF,IAAIpB,EAASC,SAASC,cAAc,UAChCmB,EAAYpB,SAASC,cAAc,cACnCoB,EAAOtB,EAAOuB,YACdC,EAAIvB,SAASwB,cAAc,KAC/BD,EAAEE,SAAW,YACbF,EAAEG,KAAOL,EACTD,EAAUO,YAAYJ,GACtBA,EAAEK,QACFR,EAAUS,YAAYN,IAMS5B,UAAU,mBACrC,4BAAQA,UAAU,gBAAgBuB,QAAS,kBAAIY,OAAOC,SAASC,cCG5DC,MArCf,WAAmB,IAAD,EAGyCvC,qBAAW3B,GAHpD,oBAEEO,GAFF,gBAEiBE,GAFjB,WAEsCE,GAFtC,WAEoDE,GAFpD,WAEoEE,GAFpE,YAEwFE,GAFxF,aAGFE,GAHE,aAGmBE,GAHnB,aAUR8C,GAVQ,MAUK,CACf5D,MAAOY,EACPV,SAAUY,EACV+C,IAAKnD,EACLoD,KAAMtD,IAEJuD,EAAY,CACdF,IAAKzD,EACL0D,KAAMxD,EACNN,MAAOA,EACPE,SAAUA,GAGd,OACI,yBAAKmB,UAAU,oBACX,+BACA,+BACA,+BACA,+BACA,uBAAGA,UAAU,WAAW2C,MAAOD,GAA/B,cACA,uBAAG1C,UAAU,cAAc2C,MAAOJ,GAAlC,cACJ,4BAAQI,MA1BQ,CAChBC,gBAAiB,OACjBlC,MAAO,QACPE,OAAQ,aCyFDiC,MAhGf,WAAiB,IAAD,EAI2C9C,qBAAW3B,GAJtD,oBAGXK,EAHW,KAGIE,GAHJ,WAGUC,EAHV,KAGmBC,EAHnB,KAG4BC,EAH5B,KAGwCC,EAHxC,KAG+CC,EAH/C,KAGsDC,EAHtD,KAG8DC,EAH9D,KAGsEC,EAHtE,MAGiFC,EAHjF,MAG0FC,EAH1F,MAIRC,EAJQ,MAIAC,EAJA,MAISC,EAJT,MAIqBC,EAJrB,MAI6BC,EAJ7B,MAsEZ,OACI,yBAAKM,UAAU,kBACX,iDACA,2BAAOA,UAAU,aAAaE,SAnErB,SAACC,GACDE,SAASC,cAAc,UACnBG,WAAW,MAClBJ,SAASC,cAAc,aAC5BwC,UAAY3C,EAAEI,OAAOX,SAgEtB,iDACA,2BAAOI,UAAU,aAAaE,SA/DrB,SAACC,GACDE,SAASC,cAAc,UACnBG,WAAW,MAClBJ,SAASC,cAAc,gBAC5BwC,UAAY3C,EAAEI,OAAOX,SA4DtB,4BAAQ2B,QAzDC,WAEb,IAAInB,EAASC,SAASC,cAAc,UAChCE,EAAMJ,EAAOK,WAAW,MACxBsC,EAAa1C,SAASC,cAAc,gBACpC0C,EAAU3C,SAASC,cAAc,aACjCY,EAAM,IAAIC,MACdf,EAAOM,MAAQN,EAAOO,YACtBP,EAAOQ,OAASR,EAAOS,aACvBK,EAAIG,OAAS,WACTb,EAAIc,UAAUJ,EAAI,EAAE,EAAEd,EAAOM,MAAMN,EAAOQ,QAC1CJ,EAAIyC,UAAYtE,EAChB6B,EAAI0C,KAAOrE,EAAU,SACrB2B,EAAI2C,SAASH,EAASF,UAAUM,SAASnE,GAASmE,SAASrE,GAA2B,EAAnBqE,SAASvE,IAC5E2B,EAAIyC,UAAY1D,EAChBiB,EAAI0C,KAAOzD,EAAS,SACpBe,EAAI2C,SAASJ,EAAYD,UAAUM,SAASjE,GAAYiE,SAAS/D,GAA8B,EAAnB+D,SAASvE,IACrFkE,EAAYD,UAAY,GACxBE,EAASF,UAAY,IAEzB5B,EAAIE,IAAM3C,IAqCN,aACA,qDAA2BE,GAC3B,2BAAOsB,KAAK,QAAQD,UAAU,eAAeE,SApClC,SAACC,GAChBvB,EAASuB,EAAEI,OAAOX,UAoCd,qDAA2BL,GAC3B,2BAAOU,KAAK,QAAQD,UAAU,eAAeE,SA/B/B,SAACC,GACnBX,EAAYW,EAAEI,OAAOX,UA+BjB,oDAA0Bf,GAC1B,2BAAOoB,KAAK,QAAQD,UAAU,cAAcE,SApClC,SAACC,GACfrB,EAAYqB,EAAEI,OAAOX,MAAQ,SAoCzB,uDAA6BH,GAC7B,2BAAOQ,KAAK,QAAQD,UAAU,cAAcE,SA/B/B,SAACC,GAClBT,EAAWS,EAAEI,OAAOX,MAAQ,SA+BxB,yDAA+BX,EAA/B,SAA8CF,GAC9C,2BAAOkB,KAAK,QAAQoD,IAAK,IAAKnD,SA7BhB,SAACC,GACnBnB,EAAOmB,EAAEI,OAAOX,MAAQ,SA6BpB,2BAAOK,KAAK,QAAQoD,IAAK,IAAKnD,SA3Bf,SAACC,GACpBjB,EAAQiB,EAAEI,OAAOX,MAAQ,SA2BrB,gCACA,4DAAkCT,EAAlC,SAAoDE,GACpD,2BAAOY,KAAK,QAASoD,IAAK,IAAKnD,SA3Bf,SAACC,GACrBb,EAAQa,EAAEI,OAAOX,MAAQ,SA2BrB,2BAAOK,KAAK,QAAQoD,IAAK,IAAKnD,SAzBT,SAACC,GAC1Bf,EAASe,EAAEI,OAAOX,MAAQ,W,KC9DnB0D,MAPf,WACI,OACI,gCACI,6CCiBGC,MAbf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACF,yBAAKvD,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCXNwD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrD,SAASsD,eAAe,U","file":"static/js/main.2defbd58.chunk.js","sourcesContent":["import React,{createContext,useState} from 'react'\r\n\r\n\r\n\r\nexport const ImageContext = createContext()\r\n\r\n\r\nexport const ContextProvider = (props)=>{\r\n    const [image,setImage] = useState('')\r\n    const [color,setColor] = useState('#000000')\r\n    const [fontSize,setFontSize] = useState('35px')\r\n    const [topTop,setTop] = useState('35px')\r\n    const [leftTop,setLeft] = useState('35px')\r\n    const [leftBottom,setLeftB] = useState('35px')\r\n    const [topBottom,setTopB] = useState('100px')\r\n    const [colorBot,setColorBot] = useState('#000000')\r\n    const [fontBot,setFontBot] = useState('35px')\r\n    \r\n\r\n    return(\r\n        <ImageContext.Provider value=\r\n        {[image,setImage,color,setColor,fontSize,setFontSize,topTop,setTop,leftTop,setLeft,leftBottom,setLeftB,topBottom,\r\n        setTopB,colorBot,setColorBot,fontBot,setFontBot]}>\r\n            {props.children}\r\n        </ImageContext.Provider>\r\n    )\r\n}","import React,{useContext} from 'react'\r\nimport {ImageContext} from './Context';\r\n\r\nfunction Input() {\r\n    const [image,setImage] = useContext(ImageContext)\r\n    const uploadImage = (e)=>{\r\n        let canvas = document.querySelector('canvas')\r\n        let target = e.target\r\n        let ctx = canvas.getContext('2d')\r\n        canvas.width = canvas.scrollWidth\r\n        canvas.height = canvas.scrollHeight\r\n        let i = URL.createObjectURL(target.files[0])\r\n        setImage(i)\r\n        let img = new Image()\r\n        img.src = i\r\n        img.onload = ()=>{\r\n            ctx.drawImage(img,0,0,canvas.width,canvas.height)\r\n        }\r\n        \r\n    }\r\n    const download = (e)=>{\r\n        e.preventDefault()\r\n        let canvas = document.querySelector('canvas')\r\n        let container = document.querySelector('.container')\r\n        let link = canvas.toDataURL()\r\n        let a = document.createElement('a')\r\n        a.download = 'image.png'\r\n        a.href = link\r\n        container.appendChild(a)\r\n        a.click()\r\n        container.removeChild(a)\r\n\r\n    }\r\n    return (\r\n        <form>\r\n            <input className='image_selected' type=\"file\" onChange={uploadImage}></input>\r\n            <button onClick={download} className='fa fa-download'></button>\r\n            <button className='fa fa-history' onClick={()=>window.location.reload()}></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Input;\r\n","import React,{useContext} from 'react'\r\nimport {ImageContext} from './Context';\r\n\r\nfunction Canvas() {\r\n    const \r\n    [image,setImage,color,setColor,fontSize,setFontSize,topTop,setTop,leftTop,setLeft,leftBottom,setLeftB,topBottom,\r\n        setTopB,colorBot,setColorBot,fontBot,setFontBot] = useContext(ImageContext)\r\n\r\n    const canvasStyle = {\r\n        backgroundColor: \"gray\",\r\n        width: '500px',\r\n        height: '400px'\r\n    }\r\n    const textBottom = {\r\n        color: colorBot,\r\n        fontSize: fontBot,\r\n        top: topBottom,\r\n        left: leftBottom\r\n    }\r\n    const textUpper = {\r\n        top: topTop,\r\n        left: leftTop,\r\n        color: color,\r\n        fontSize: fontSize\r\n    }\r\n\r\n    return (\r\n        <div className='canvas_container'>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <p className='text_top' style={textUpper}>Upper Text</p>\r\n            <p className='text_bottom' style={textBottom}>Lower Text</p>\r\n        <canvas style={canvasStyle}>\r\n\r\n        </canvas>\r\n        </div>\r\n    )\r\n}\r\nexport default Canvas;\r\n","import React,{useContext} from 'react'\r\nimport {ImageContext} from './Context';\r\n\r\n\r\nfunction Meme() {\r\n\r\n    const \r\n    [image,setImage,color,setColor,fontSize,setFontSize,topTop,setTop,leftTop,setLeft,leftBottom,setLeftB,topBottom,\r\n        setTopB,colorBot,setColorBot,fontBot,setFontBot] = useContext(ImageContext)\r\n\r\n    const setUpper = (e)=>{ \r\n        let canvas = document.querySelector('canvas')\r\n        let ctx = canvas.getContext('2d')\r\n        let text =document.querySelector('.text_top')\r\n        text.innerHTML = e.target.value\r\n    }\r\n    const setLower = (e)=>{\r\n        let canvas = document.querySelector('canvas')\r\n        let ctx = canvas.getContext('2d')\r\n        let text =document.querySelector('.text_bottom')\r\n        text.innerHTML = e.target.value\r\n    }\r\n\r\n    const saveMeme = ()=>{\r\n        \r\n        let canvas = document.querySelector('canvas')\r\n        let ctx = canvas.getContext('2d')\r\n        let text_bottom =document.querySelector('.text_bottom')\r\n        let text_top =document.querySelector('.text_top')\r\n        let img = new Image()\r\n        canvas.width = canvas.scrollWidth\r\n        canvas.height = canvas.scrollHeight\r\n        img.onload = ()=>{\r\n            ctx.drawImage(img,0,0,canvas.width,canvas.height)\r\n            ctx.fillStyle = color\r\n            ctx.font = fontSize +\" Arial\"\r\n            ctx.fillText(text_top.innerHTML,parseInt(leftTop),parseInt(topTop)+parseInt(fontSize)*2)\r\n            ctx.fillStyle = colorBot\r\n            ctx.font = fontBot +\" Arial\"\r\n            ctx.fillText(text_bottom.innerHTML,parseInt(leftBottom),parseInt(topBottom)+parseInt(fontSize)*2)\r\n            text_bottom.innerHTML = ''\r\n            text_top.innerHTML = ''\r\n        }\r\n        img.src = image\r\n    }\r\n\r\n    const valueColor = (e)=>{\r\n        setColor(e.target.value)\r\n\r\n    }\r\n    const valueFont = (e)=>{\r\n        setFontSize(e.target.value + 'px')\r\n    }\r\n    const valueColorBot = (e)=>{\r\n        setColorBot(e.target.value)\r\n\r\n    }\r\n    const valueFontBot = (e)=>{\r\n        setFontBot(e.target.value + 'px')\r\n    }\r\n\r\n    const setTopTextTop = (e)=>{\r\n        setTop(e.target.value + 'px')\r\n    }\r\n    const setLeftTextTop = (e)=>{\r\n        setLeft(e.target.value + 'px')\r\n    }\r\n    const setTopTextBottom= (e)=>{\r\n        setTopB(e.target.value + 'px')\r\n    }\r\n    const setLeftTextTopBottom = (e)=>{\r\n        setLeftB(e.target.value + 'px')\r\n    }\r\n\r\n    return (\r\n        <div className='meme_container'>\r\n            <label>Set Upper Text</label>\r\n            <input className='upper_text' onChange={setUpper}></input>\r\n            <label>Set Lower Text</label>\r\n            <input className='lower_text' onChange={setLower}></input>\r\n            <button onClick={saveMeme}>Save Meme</button>\r\n            <label>Text Color Bottom: {color}</label>\r\n            <input type=\"color\" className='color_picker' onChange={valueColor}></input>\r\n            <label>Text Color Bottom: {colorBot}</label>\r\n            <input type=\"color\" className='color_picker' onChange={valueColorBot}></input>\r\n            <label>Font Size Top :   {fontSize}</label>\r\n            <input type=\"range\" className='font_picker' onChange={valueFont}></input>\r\n            <label>Font Size Bottom :   {fontBot}</label>\r\n            <input type=\"range\" className='font_picker' onChange={valueFontBot}></input>\r\n            <label>Top Text Position Left:{leftTop} Top: {topTop}</label>\r\n            <input type=\"range\" max={350} onChange={setTopTextTop}></input>\r\n            <input type=\"range\" max={400} onChange={setLeftTextTop}></input>\r\n            <label></label>\r\n            <label>Bottom Text Position Left:{leftBottom} Top: {topBottom}</label>\r\n            <input type=\"range\"  max={400} onChange={setTopTextBottom}></input>\r\n            <input type=\"range\" max={500} onChange={setLeftTextTopBottom}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Meme;\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <h1>Make a Meme</h1>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;\r\n","import React from 'react';\nimport Input from './Input';\nimport Canvas from './Canvas';\nimport { ContextProvider } from './Context';\nimport Meme from './Meme';\nimport './css/style.css'\nimport Header from './Header';\n\n\nfunction App() {\n  return (\n    <ContextProvider>\n      <Header/>\n    <div className='container'>\n      <Input/>\n      <Canvas/>\n      <Meme/>\n    </div>\n    </ContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}